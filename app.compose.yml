version: '3.3'
services:

  speedtest:
    build:
      context: .
      dockerfile: Dockerfile
    image: speedtest:nginx-unit
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.speedtest.entrypoints=http
        - traefik.http.routers.speedtest.rule=Host(`${APP_HOSTNAME}`)
        - traefik.http.services.speedtest.loadbalancer.server.port=80
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        tag: speedtest.app
    networks:
      - backend
      - traefik-public
      - efk
    volumes:
      - ./docker/servers.json:/servers.json

  mysql:
    image: mysql:8.0.2
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - deploy/.env
    ports:
      - "3306:3306"
    command:
      - "--default-authentication-plugin=mysql_native_password"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        tag: speedtest.mysql
    networks:
      - backend
      - efk
    volumes:
      - type: volume
        source: st-dbdata
        target: /var/lib/mysql
      - ./results/telemetry_mysql.sql:/docker-entrypoint-initdb.d/telemetry_mysql.sql

  traefik:
    image: traefik:v2.2
    ports:
      - ${TRF_LISTENED_PORT}:80
      - 443:443
    deploy:
      placement:
        constraints:
          - node.labels.traefik-public.traefik-public-certificates == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME}:${HASHED_PASSWORD}
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - traefik.http.routers.traefik-public-http.rule=Host(`traefik.${DOMAIN}`)
        - traefik.http.routers.traefik-public-http.entrypoints=http
        - traefik.http.routers.traefik-public-http.middlewares=https-redirect
        - traefik.http.routers.traefik-public-https.rule=Host(`traefik.${DOMAIN}`)
        - traefik.http.routers.traefik-public-https.entrypoints=https
        - traefik.http.routers.traefik-public-https.tls=true
        - traefik.http.routers.traefik-public-https.service=api@internal
        - traefik.http.routers.traefik-public-https.tls.certresolver=le
        - traefik.http.routers.traefik-public-https.middlewares=admin-auth
        - traefik.http.services.traefik-public.loadbalancer.server.port=8081
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certificates:/certificates
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=${EMAIL}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        tag: traefik
    networks:
      - traefik-public
      - efk

networks:
  backend:
  traefik-public:
    external: true
  efk:
    external: true

volumes:
  st-dbdata:
  traefik-public-certificates:
